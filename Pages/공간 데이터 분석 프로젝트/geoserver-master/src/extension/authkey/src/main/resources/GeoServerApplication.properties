org.geoserver.security.GeoServerAuthenticationKeyFilter.name=AuthKey 
org.geoserver.security.GeoServerAuthenticationKeyFilter.title=Authentication using a key
  
 
AuthenticationKeyFilterPanel.short=AuthKey 
AuthenticationKeyFilterPanel.title=Authentication Key
AuthenticationKeyFilterPanel.description=Authenticates by looking up for an authentication key sent as URL parameter

AuthenticationKeyFilterPanel.authKeyParamName=Name of URL parameter
AuthenticationKeyFilterPanel.authKeyMapperName=Authentication key to user mapper
AuthenticationKeyFilterPanel.userGroupService=User/Group Service

AuthenticationKeyFilterPanel.propertyMapper=Property file
AuthenticationKeyFilterPanel.userPropertyMapper=User property
AuthenticationKeyFilterPanel.webServiceMapper=Web Service


AuthenticationKeyFilterPanel.authKeyParameters=Authentication key authentication
AuthenticationKeyFilterPanel.authKeyParametersHelp.title=Authentication key authentication
AuthenticationKeyFilterPanel.authKeyParametersHelp=<p>The authentication key is sent using \
an URL parameter.</p><p>Example: <strong>http://my.geoserver.org/geoserver/web&authkey=favdsfd</strong></p>\
 <p>The property file mapper uses a file <strong>authkeys.properties</strong> for storing the key\
 to user mapping.</p><p>The user property mapper stores the key as a user property in the user/group\
 service.</p><p>Pressing the <strong>Synchronize</strong> button saves the configuration and \
 adds missing keys for new users.</p>

AuthenticationKeyFilterPanel.synchronizeSuccessful=Synchronized successfully by adding {0} keys
AuthenticationKeyFilterPanel.synchronize=Synchronize user/group service

AuthenticationKeyFilterPanel.webServiceMapper.readTimeout=Read Timeout
AuthenticationKeyFilterPanel.webServiceMapper.connectTimeout=Connection Timeout
AuthenticationKeyFilterPanel.webServiceMapper.searchUser=Web Service Response User Search Regular Expression
AuthenticationKeyFilterPanel.webServiceMapper.webServiceUrl=Web Service URL, with key placeholder
AuthenticationKeyFilterPanel.fakeMapper=fakeMapper

# user group services
org.geoserver.security.WebServiceBodyResponseUserGroupService.name=AuthKEY WebService Body Response
org.geoserver.security.WebServiceBodyResponseUserGroupService.title=AuthKEY WebService Body Response UserGroup Service

WebServiceBodyResponseUserGroupServicePanel.short=AuthKEY WebService Body Response
WebServiceBodyResponseUserGroupServicePanel.title=AuthKEY WebService Body Response UserGroup Service
WebServiceBodyResponseUserGroupServicePanel.description=UserGroup Service from WebService Response Body

WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParameters=AuthKEY WebService Body Response
WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp.title=AuthKEY WebService Body Response UserGroup Service
WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp=<p>This Service looks for user roles inside the WebService \
Response Body. This is meant to be used along with <strong>AuthKey WebService Authentication</strong>.</p><p>Example Regex for Roles could be: <strong>^.*?"roles"\s*:\s*"([^"]+)".*$</strong></p>\
 <p><pre>{"roles": "ROLE_1, ROLE_2, ROLE_3"}</pre></p>\
 <p>Optionally it is possible to list the <strong>groups</strong> that the WebService could server: <pre>GROUP_ROLE_1, GROUP_ROLE_2, GROUP_ROLE_3</pre></p>\
 <p></p>

WebServiceBodyResponseUserGroupServicePanel.searchRoles=Web Service Response Roles Search Regular Expression
WebServiceBodyResponseUserGroupServicePanel.availableGroups=Optional static comma-separated list of available Groups from the Web Service response
WebServiceBodyResponseUserGroupServicePanel.roleServiceName=Role Service to use (empty value means: use the current Active Role Service)

# role services
org.geoserver.security.GeoServerRestRoleService.name=AuthKEY REST
org.geoserver.security.GeoServerRestRoleService.title=AuthKEY REST Role Service

GeoServerRestRoleServicePanel.short=AuthKEY REST
GeoServerRestRoleServicePanel.title=AuthKEY REST Role Service
GeoServerRestRoleServicePanel.description=Role service from REST endpoint

GeoServerRestRoleServicePanel.restRoleSettings=REST Role Service Settings
GeoServerRestRoleServicePanel.baseUrl=Base Server URL
GeoServerRestRoleServicePanel.rolesRESTEndpoint=Roles REST Endpoint
GeoServerRestRoleServicePanel.adminRoleRESTEndpoint=Admin Role REST Endpoint
GeoServerRestRoleServicePanel.usersRESTEndpoint=Users REST Endpoint
GeoServerRestRoleServicePanel.rolesJSONPath=Roles JSON Path
GeoServerRestRoleServicePanel.adminRoleJSONPath=Admin Role JSON Path
GeoServerRestRoleServicePanel.usersJSONPath=Users JSON Path
GeoServerRestRoleServicePanel.cacheConcurrencyLevel=REST Rules Cache Concurrency Level
GeoServerRestRoleServicePanel.cacheMaximumSize=REST Rules Cache Maximum Size (# keys)
GeoServerRestRoleServicePanel.cacheExpirationTime=REST Rules Cache Expiration Time (ms)
GeoServerRestRoleServicePanel.authApiKey=REST Api Key (optional)
