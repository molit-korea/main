<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 Copyright (C) 2014 - 2016 Open Source Geospatial Foundation. All rights reserved.
 This code is licensed under the GPL 2.0 license, available at the root
 application directory.
 -->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <bean id="wmtsCapabilitiesProvider" class="org.geoserver.gwc.wmts.WMTSCapabilitiesProvider">
    <constructor-arg ref="geoServer"/>
  </bean>

  <bean class="org.geoserver.platform.ModuleStatusImpl">
    <constructor-arg index="0" value="gs-gwc"/>
    <constructor-arg index="1" value="GeoWeb Cache"/>
  </bean>
  
  <import resource="geowebcache-geoserver-context.xml" />
  <import resource="geowebcache-servlet.xml" />

  <bean id="GWCLifeCycleHandler" class="org.geoserver.gwc.config.GWCLifeCycleHandler" depends-on="gwcFacade">
    <description>Reloads the GWC config when GeoServer is called for a reload</description>
  </bean>
  
  <bean id="gwcJdbcConfigurationStorage" class="org.geoserver.gwc.JDBCConfigurationStorage">
    <constructor-arg index="0" ref="resourceStore"/>       
    <constructor-arg index="1" ref="geoServerSecurityManager"/>
  </bean>
  
  <bean id="gwcFacade" class="org.geoserver.gwc.GWC" depends-on="geoWebCacheExtensions" lazy-init="false">
    <constructor-arg ref="gwcGeoServervConfigPersister" />
    <constructor-arg ref="gwcStorageBroker" />
    <constructor-arg ref="gwcTLDispatcher" />
    <constructor-arg ref="gwcGridSetBroker" />
    <constructor-arg ref="gwcTileBreeder" />
    <constructor-arg ref="DiskQuotaMonitor" />
    <constructor-arg ref="dispatcher" />
    <constructor-arg ref="catalog" />
    <constructor-arg ref="rawCatalog" />
    <constructor-arg ref="gwcDefaultStorageFinder"/>
    <constructor-arg ref="gwcJdbcConfigurationStorage"/>
  </bean>

  <bean id="gwcWMSExtendedCapabilitiesProvider" class="org.geoserver.gwc.wms.CachingExtendedCapabilitiesProvider">
    <constructor-arg ref="gwcFacade" />
  </bean>

  <bean id="gwcTransactionListener" class="org.geoserver.gwc.GWCTransactionListener">
    <constructor-arg ref="gwcFacade" />
  </bean>
  <bean id="gwcGeoServervConfigPersister" class="org.geoserver.gwc.config.GWCConfigPersister">
    <constructor-arg ref="xstreamPersisterFactory" />
    <constructor-arg ref="resourceLoader">
      <description>
        GeoServer's resource loader to locate the root configuration
        directory where to store gwc-gs.xml
      </description>
    </constructor-arg>
  </bean>

  <bean id="gwcInitializer" class="org.geoserver.gwc.config.GWCInitializer">
    <constructor-arg ref="gwcGeoServervConfigPersister" />
    <constructor-arg ref="rawCatalog" />
    <constructor-arg ref="GeoSeverTileLayerCatalog" />
    <property name="blobStore" ref="gwcConfigBlobStore" />
  </bean>

  <bean id="cachingWebMapService" class="org.geoserver.gwc.wms.CachingWebMapService">
    <description>
      org.geoserver.wms.WebMapService.getMap() method interceptor to
      check whether the requested map
      corresponds to a cached or cacheable tile and if so return the GWC version of the image.
    </description>
    <constructor-arg ref="gwcFacade" />
  </bean>

  <bean id="wmsServiceInterceptor_CachingWMS" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
    <description>
      Before advise to engage on the WMS service getMap method invocation.
      The bean name follows the WMS
      module convention of starting with "wmsServiceInterceptor" to be automatically engaged
    </description>
    <property name="advice">
      <ref bean="cachingWebMapService" />
    </property>
    <property name="mappedName">
      <value>getMap</value>
    </property>
  </bean>

  <bean id="seedingWebMapService" class="org.geoserver.gwc.wms.CacheSeedingWebMapService">
    <description>
      org.geoserver.wms.WebMapService.getMap() method interceptor to
      check whether the requested map
      corresponds to a cached or cacheable tile and if so return the GWC version of the image.
    </description>
  </bean>

  <bean id="wmsServiceInterceptor_SeedingWMS" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
    <description>
      Before advise to engage on the WMS service getMap method invocation.
      The bean name follows the WMS
      module convention of starting with "wmsServiceInterceptor" to be automatically engaged
    </description>
    <property name="advice">
      <ref bean="seedingWebMapService" />
    </property>
    <property name="mappedName">
      <value>getMap</value>
    </property>
  </bean>

  <bean id="gwcServiceWMSInterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcServiceTMSInterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcWMTSServiceInterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcServiceVEInterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcServiceKMLInterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcServiceGMapsterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>
  <bean id="gwcServiceMGMapsterceptorEnabledCheck" class="org.geoserver.gwc.config.GWCServiceEnablementInterceptor">
    <constructor-arg ref="gwcFacade" />
    <constructor-arg ref="geoServer" />
  </bean>

  <bean id="wmtsLoader" class="org.geoserver.gwc.wmts.WMTSXStreamLoader">
    <constructor-arg ref="resourceLoader"/>
  </bean>
  <bean id="wmtsFactoryExtension" class="org.geoserver.gwc.wmts.WMTSFactoryExtension"/>

  <!-- Specific URL mapping for GWC WMTS REST API -->
  <bean id="gwcWmtsRestUrlHandlerMapping" class="org.geoserver.gwc.controller.GwcWmtsRestUrlHandlerMapping">
    <constructor-arg ref="catalog" />
    <property name="alwaysUseFullPath" value="true" />
    <property name="order" value="10" />
  </bean>
  
  <bean id="gwcResourceServiceVoter" class="org.geoserver.gwc.wmts.GWCResourceServiceVoter"/>

  <bean id="gwcLocalWorkspaceURLManger" class="org.geoserver.ows.LocalWorkspaceURLMangler">
    <constructor-arg value="gwc"/>
  </bean>

</beans>
