//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.12.17 at 04:13:52 PM PST
//

package org.geoserver.mapml.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * Java class for positionType.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <p>
 *
 * <pre>
 * &lt;simpleType name="positionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="top-left"/>
 *     &lt;enumeration value="top-right"/>
 *     &lt;enumeration value="bottom-left"/>
 *     &lt;enumeration value="bottom-right"/>
 *     &lt;enumeration value="center-left"/>
 *     &lt;enumeration value="center-right"/>
 *     &lt;enumeration value="top-center"/>
 *     &lt;enumeration value="bottom-center"/>
 *     &lt;enumeration value="center"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "positionType")
@XmlEnum
public enum PositionType {
    @XmlEnumValue("top-left")
    TOP_LEFT("top-left"),
    @XmlEnumValue("top-right")
    TOP_RIGHT("top-right"),
    @XmlEnumValue("bottom-left")
    BOTTOM_LEFT("bottom-left"),
    @XmlEnumValue("bottom-right")
    BOTTOM_RIGHT("bottom-right"),
    @XmlEnumValue("center-left")
    CENTER_LEFT("center-left"),
    @XmlEnumValue("center-right")
    CENTER_RIGHT("center-right"),
    @XmlEnumValue("top-center")
    TOP_CENTER("top-center"),
    @XmlEnumValue("bottom-center")
    BOTTOM_CENTER("bottom-center"),
    @XmlEnumValue("center")
    CENTER("center");
    private final String value;

    PositionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PositionType fromValue(String v) {
        for (PositionType c : PositionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
